Te voy a transcribir primero todos los archivos del proyecto para que los tengas en cuenta, cuando me des el ok de que los recordarás, me pides que te pase las clases. 

Ahora te muestro la estructura:

Estructura sigue siendo:
Web Pages/
   WEB-INF/
      oradores.jsp
      agregar-orador.jsp
      editar-orador.jsp
   img/... (carpeta con imágenes del proyecto)
   index.html
   styles.css
   tickets.js
   favicon.png

Source Packages/
   dev.sgvero.confbsas.sgv/
      Orador.java
      OradorDAO.java
      DatabaseConnection.java
   dev.sgvero.confbsas.sgv.app/
      OradorServlet.java

BD: confbsas, Tabla: oradores (id (INT,ai), nombre,apellido,temario,foto(todas string)), us/pass: root/root, 3306


archivos:

- Web Pages/index.html :

<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" type="image/png" href="favicon.png">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
    <link rel="stylesheet" href="styles.css">
    <title>Conf Bs As - Codo a Codo</title>
</head>

<body>
    <menu class="container-fluid m-auto p-0">
        <nav class="navbar navbar-expand-lg navbar-dark">
            <div class="container-fluid">
                <a class="navbar-brand" href="#">
                    <img src="img/codoacodo.png" alt="" width="90" class="d-inline-block align-text-middle">
                    Conf Bs As
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                    data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false"
                    aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse justify-content-end navbar-collapse" id="navbarNavAltMarkup">
                    <div class="navbar-nav">
                        <a class="nav-link active" aria-current="page" href="#">La conferencia</a>
                        <a class="nav-link" href="#oradores">Los oradores</a>
                        <a class="nav-link" href="OradorServlet?action=mostrarListaOradores">Ver oradores</a>
                        <a class="nav-link" href="#fecha">El lugar y la fecha</a>
                        <a class="nav-link" href="#form">Conviértete en orador</a>
                        <a class="nav-link nav-link__direct" href="#ticket">Comprar tickets</a>
                    </div>
                </div>
            </div>
        </nav>
    </menu>

    <main>
        <header>
            <div class="text container-fluid">
                <div class="hero">
                    <h2>Conf Bs As</h2>
                    <p>Bs As llega por primera vez a Argentina. Un evento para compartir con nuestra comunidad el
                        conocimiento y
                        experiencia de los expertos que están creando el futuro de Internet. Ven a conocer a miembros
                        del evento, a
                        otros estudiantes de Codo a Codo y los oradores de primer nivel que tenemos para tí. Te
                        esperamos!</p>
                </div>
                <div class="btns">
                    <a href="#form"><button class="btn__quiero">Quiero ser orador</button></a>
                    <a href="#ticket"><button class="btn__comprar">Comprar tickets</button></a>
                </div>
            </div>
            <img class="img__header" src="img/ba1.jpg" width="100%" alt="">
        </header>
        <span class="link" id="oradores"></span>
        <section class="oradores">
            <h6>conoce a los</h6>
            <h3>oradores</h3>
            <div class="grid__oradores">
                <div class="orador"><img src="img/steve.jpg" alt="">
                    <h6><span class="js">JavaScript</span><span class="react">React</span></h6>
                    <div class="oradores__detalle">
                        <h5>Steve Jobs</h5>
                        <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Odit quisquam obcaecati veritatis
                            voluptate?
                            Eos nisi asperiores obcaecati accusamus cupiditate doloremque ipsa excepturi laborum
                            reiciendis, tenetur
                            consequuntur.</p>
                    </div>
                </div>
                <div class="orador"><img src="img/bill.jpg" alt="">
                    <h6><span class="js">JavaScript</span><span class="react">React</span></h6>
                    <div class="oradores__detalle">
                        <h5>Bill Gates</h5>
                        <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Odit quisquam obcaecati veritatis
                            voluptate?
                            Eos nisi asperiores obcaecati accusamus cupiditate doloremque ipsa excepturi laborum
                            reiciendis, tenetur
                            consequuntur.
                        <p>
                    </div>
                </div>
                <div class="orador"><img src="img/adal.jpg" alt="">
                    <h6><span class="ng">Negocios</span><span class="st">Startaps</span></h6>
                    <div class="oradores__detalle">
                        <h5>Ada Lovelace</h5>
                        <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Odit quisquam obcaecati veritatis
                            voluptate?
                            Eos nisi asperiores obcaecati accusamus cupiditate doloremque ipsa excepturi laborum
                            reiciendis, tenetur
                            consequuntur.</p>
                    </div>
                </div>
            </div>
        </section>
        <span class="link" id="fecha"></span>
        <section class="container-fluid row mx-0 p-0">
            <div class="imagen__baires m-0 px-0 py-4 col-12 col-lg-6">
                <img src="img/honolulu.jpg" width="100%" alt="">
            </div>
            <div class="textos__baires col-md-12 col-lg-6 my-4 p-4">
                <h4>Bs. As. Octubre</h4>
                <p>Buenos Aires es la provincia y localidad más grande del estado de Arentina, en los Estados Unidos,
                    Honolulu
                    es la más sureña de entre las principales ciudades estadounidenses. Auqnue el nombre de Honolulu se
                    refiere al
                    área urbana en la costa sureste de la isla de Oahu, la ciudad y el condado de Honolulu han formado
                    una
                    ciudad-condado consolidada que cubre toda la ciudada (aproximadamente 600 km2 de superficie)</p>
                <a href="#">Conocé más</a>
            </div>

        </section>
        <span class="link" id="form"></span>
        <section class="formulario">
            <h6>conviértete en un</h6>
            <h3>orador</h3>
            <p>Anótate como orador para dar una <a href="#">charla ignite</a>. Cuéntanos de qué quieres hablar!</p>
            <form method="POST" action="OradorServlet" onsubmit="return validateForm()">
                <input type="text" name="nombre" id="nombre" placeholder="Nombre" required />
                <input type="text" name="apellido" id="apellido" placeholder="Apellido" required />
                <textarea name="temario" id="comentario" placeholder="Sobre qué quieres hablar?"></textarea>
                <input type="file" name="foto" id="foto" accept="img/*" />
                <span class="form__nota">Recuerda incluir un título para tu charla</span>
                <input id="submit" type="submit" value="Enviar" />
            </form>
        </section>

        <span class="link" id="form"></span>
        <section class="formulario formulario__ticket" id="ticket">
            <article class="grid__tickets">
                <button id="estudianteBtn" class="box__ticket blue">
                    <h4>Estudiante</h4>
                    <p>Tienen un descuento</p>
                    <h5>80%</h5>
                    <h6>* presentar documentación</h6>
                </button>
                <button id="traineeBtn" class="box__ticket green">
                    <h4>Trainee</h4>
                    <p>Tienen un descuento</p>
                    <h5>50%</h5>
                    <h6>* presentar documentación</h6>
                </button>
                <button id="juniorBtn" class="box__ticket orange">
                    <h4>Junior</h4>
                    <p>Tienen un descuento</p>
                    <h5>15%</h5>
                    <h6>* presentar documentación</h6>
                </button>
            </article>
            <h6>venta</h6>
            <h3>VALOR DEL TICKET $200</h3>
            <form method="POST" action="" id="comprar__ticket">
                <input type="text" name="nombre" id="nombreN" placeholder="Nombre" required />
                <input type="text" name="apellido" id="apellidoN" placeholder="Apellido" required />
                <input type="email" name="email" id="email" placeholder="Correo" required />
                <div class="form__rows">
                    <label for="cantidad">Cantidad</label>
                    <label for="categoria">Categoría</label>
                </div>
                <input type="number" name="cantidad" id="cantidad" placeholder="cantidad" required />
                <select name="categoria" id="categoria" required>
                    <option value="estudiante">Estudiante</option>
                    <option value="trainee">Trainee</option>
                    <option value="junior">Junior</option>
                </select>

                <p class="salida" id="totalPagar">Total a pagar: $</p>

                <div class="form-btns">
                    <input id="resetBtn" type="reset" value="Borrar" />
                    <input id="resumenBtn" type="submit" value="Resumen" />
                </div>
            </form>
        </section>
    </main>

    <footer class="container-fluid py-4">
        <div class="row">
            <span class="col"></span>
            <ul class="list-inline col-10 text-center">
                <li class="list-inline-item col"><a href="#">Preguntas frecuentes</a></li>
                <li class="list-inline-item col"><a href="#">Contáctanos</a></li>
                <li class="list-inline-item col"><a href="#">Prensa</a></li>
                <li class="list-inline-item col"><a href="#">Conferencias</a></li>
                <li class="list-inline-item col"><a href="#">Términos y condiciones</a></li>
                <li class="list-inline-item col"><a href="#">Privacidad</a></li>
                <li class="list-inline-item col"><a href="#">Estudiantes</a></li>
            </ul>
            <span class="col"></span>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"
        integrity="sha384-mQ93GR66B00ZXjt0YO5KlohRA5SY2XofN4zfuZxLkoj1gXtW8ANNCe9d5Y3eG5eD"
        crossorigin="anonymous"></script>
    <script src="ticket.js"></script>
</body>

</html>

- Web Pages/WEB-INF/oradores.jsp
<%-- Document : oradores Created on : 2 jul 2023, 11:57:00 Author : SGVero --%>

<%@ page import="dev.sgvero.confbsas.sgv.OradorDAO" %>
<%@ page import="dev.sgvero.confbsas.sgv.Orador" %>
<%@ page import="java.util.List" %>
<!DOCTYPE html>
<html lang="es">

    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="icon" type="image/png" href="favicon.png">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
              rel="stylesheet">
        <link rel="stylesheet" href="styles.css">
        <title>Conf Bs As - Lista de Oradores</title>
    </head>

    <body>
        <menu class="container-fluid m-auto p-0">
            <nav class="navbar navbar-expand-lg navbar-dark">
                <div class="container-fluid">
                    <a class="navbar-brand" href="index.html">
                        <img src="img/codoacodo.png" alt="" width="90"
                             class="d-inline-block align-text-middle">
                        Conf Bs As
                    </a>
                    <div class="form-login">
                        <button class="login" type="button" onclick="ingresar()">Ingresar</button>
                    </div>
                </div>
            </nav>
        </menu>
        <main class="listado">
            <section class="listado__db">
                <h2>Lista de Oradores Inscriptos</h2>
            </section>
            <section class="popup__login" id="login">
                <form class="form-group">
                    <input type="text" class="form-control" id="username" placeholder="Usuario">
                    <input type="password" class="form-control" id="password" placeholder="Contraseña">
                    <input class="enviar" id="submit" type="submit" value="Enviar" />
                </form>
            </section>
            <div class="d-flex justify-content-end mt-5 mx-5 btn-pos">
                <a href="agregar-orador.jsp" class="btn-orador-add">Agregar orador</a>
            </div>
            <section class="bloque-lista">
                <% OradorDAO oradorDAO=new OradorDAO(); List<Orador> oradores = oradorDAO.getOradores();
                    for (Orador orador : oradores) {
                %>
                <div class="bloque-datos">
                    <div class="bloque-orador">
                        <img src="<%= orador.getFoto() %>" alt="Foto del orador" width="100" height="100">
                    </div>
                    <div class="bloque-orador">
                        <code class="oradores px-2 small">Nombre: <span
                                class="text-secondary fw-bold fst-italic">
                                <%= orador.getNombre() %>
                            </span>
                        </code>
                    </div>
                    <div class="bloque-oreador">
                        <code class="oradores px-2 small">Apellido: <span
                                class="text-secondary fw-bold fst-italic">
                                <%= orador.getApellido() %>
                            </span>
                        </code>
                    </div>
                    <div class="bloque-orador">
                        <code class="oradores px-2 small">Temario: <span
                                class="text-secondary fw-bold fst-italic">
                                <%= orador.getTemario() %>
                            </span>
                        </code>
                    </div>
                    <div class="gap-2 d-flex bg-warning justify-content-end pe-2">
                        <a href="editar-orador.jsp?id=<%= orador.getId() %>" class="btn-orador-edit">
                            <i class="fa-solid fa-pen-to-square"></i></a>
                        <a href="OradorServlet?action=borrar&id=<%= orador.getId() %>"
                           class="btn-orador-del"><i class="fa-solid fa-trash-can"></i></a>
                    </div>
                </div>
                <hr>
                <% } %>
            </section>

        </main>
        <footer class="container-fluid py-4">
            <div class="row">
                <span class="col"></span>
                <ul class="list-inline col-10 text-center">
                    <li class="list-inline-item col"><a href="#">Preguntas frecuentes</a></li>
                    <li class="list-inline-item col"><a href="#">Contáctanos</a></li>
                    <li class="list-inline-item col"><a href="#">Prensa</a></li>
                    <li class="list-inline-item col"><a href="#">Conferencias</a></li>
                    <li class="list-inline-item col"><a href="#">Términos y condiciones</a></li>
                    <li class="list-inline-item col"><a href="#">Privacidad</a></li>
                    <li class="list-inline-item col"><a href="#">Estudiantes</a></li>
                </ul>
                <span class="col"></span>
            </div>
        </footer>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>
        <script src="https://kit.fontawesome.com/ad22120107.js" crossorigin="anonymous"></script>
        <script src="ticket.js"></script>
    </body>

</html>

- Web Pages/WEB-INF/agregar-orador.jsp
<%-- 
    Document   : oradores
    Created on : 4 jul 2023, 14:32:59
    Author     : SGVero
--%>

<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html lang="es">

    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="icon" type="image/png" href="favicon.png">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
              integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
        <link rel="stylesheet" href="styles.css">
        <title>Conf Bs As - Lista de Oradores</title>
    </head>

    <body>
        <span class="link" id="form"></span>
            <section class="formulario">
                <h6>conviértete en un</h6>
                <h3>orador</h3>
                <p>Anótate como orador para dar una <a href="#">charla ignite</a>. Cuéntanos de qué quieres hablar!</p>
                <form method="POST" action="OradorServlet" onsubmit="return validateForm()">
                    <input type="text" name="nombre" id="nombre" placeholder="Nombre" required />
                    <input type="text" name="apellido" id="apellido" placeholder="Apellido" required />
                    <textarea name="temario" id="comentario" placeholder="Sobre qué quieres hablar?"></textarea>
                    <input type="file" name="foto" id="foto" accept="img/*" />
                    <span class="form__nota">Recuerda incluir un título para tu charla</span>
                    <input id="submit" type="submit" value="Enviar" />
                </form>
            </section>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"
                integrity="sha384-mQ93GR66B00ZXjt0YO5KlohRA5SY2XofN4zfuZxLkoj1gXtW8ANNCe9d5Y3eG5eD"
        crossorigin="anonymous"></script>
        <script src="ticket.js"></script>
    </body>

</html>

- Web Pages/WEB-INF/editar-orador.jsp
<%--
    Document   : editar-orador
    Created on : 4 jul 2023, 20:23:37
    Author     : SGVero
--%>

<%@page contentType="text/html" pageEncoding="UTF-8"%>
<%@ page import="dev.sgvero.confbsas.sgv.OradorDAO" %>
<%@ page import="dev.sgvero.confbsas.sgv.Orador" %>
<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="icon" type="image/png" href="favicon.png">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
              integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
        <link rel="stylesheet" href="styles.css">
        <title>Conf Bs As - Editar Orador</title>
    </head>
    <body>

        <% 
            // Obtener el ID del orador desde el parámetro de la URL
            String idStr = request.getParameter("id");
            int id = Integer.parseInt(idStr);

            // Obtener el orador actual desde la base de datos
            OradorDAO oradorDAO = new OradorDAO();
            Orador orador = oradorDAO.getOradorById(id);
        
            if (orador != null) { // Agregado el bloque if
        %>
            
        <span class="link" id="form"></span>
            <section class="container mt-5 formulario">
                <h6>modifica los datos del orador</h6>
                <h3>orador</h3>
                <form action="OradorServlet?action=editar" method="post" onsubmit="return validateForm()">
                    <input type="hidden" name="id" value="<%= orador.getId() %>">
                    <input type="text" name="nombre" value="<%= orador.getNombre() %>">
                    <input type="text" name="apellido" value="<%= orador.getApellido() %>">
                    <input class="temario" type="text" name="temario" value="<%= orador.getTemario() %>">
                    <input type="file" name="foto" id="foto" accept="img/*" />
                    <span class="text-center form__nota">Revisa tus cambios antes de guardar</span>
                    <input type="submit" value="Guardar cambios">
                </form>
            </section>            
        <% } else { %>
        <p>Orador no encontrado</p>
        <% } %>
        
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"
                integrity="sha384-mQ93GR66B00ZXjt0YO5KlohRA5SY2XofN4zfuZxLkoj1gXtW8ANNCe9d5Y3eG5eD"
        crossorigin="anonymous"></script>
        <script src="ticket.js"></script>
    </body>
</html>

- Web Pages/WEB-INF/web.xml
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="https://jakarta.ee/xml/ns/jakartaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_6_0.xsd"
         version="6.0">
    <session-config>
        <session-timeout>
            30
        </session-timeout>
    </session-config>
    <servlet>
        <servlet-name>OradorServlet</servlet-name>
        <servlet-class>dev.sgvero.confbsas.sgv.app.OradorServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>OradorServlet</servlet-name>
        <url-pattern>/OradorServlet</url-pattern>
    </servlet-mapping>
</web-app>


- Source Packages/
- dev.sgvero.confbsas.sgv/DatabaseConnection.java

package dev.sgvero.confbsas.sgv;

/* @author SGVero */

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class DatabaseConnection {
    private static final String URL = "jdbc:mysql://localhost:3306/confba";
    private static final String USERNAME = "root";
    private static final String PASSWORD = "root";

    public static Connection getConnection() throws SQLException {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            return DriverManager.getConnection(URL, USERNAME, PASSWORD);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
            throw new SQLException("Error al conectar con la base de datos");
        }
    }
}


- dev.sgvero.confbsas.sgv/Orador.java

package dev.sgvero.confbsas.sgv;

public class Orador {
    private int id;
    private String nombre;
    private String apellido;
    private String temario;
    private String foto;

    public Orador(int id, String nombre, String apellido, String temario, String foto) {
        this.id = id;
        this.nombre = nombre;
        this.apellido = apellido;
        this.temario = temario;
        this.foto = foto;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public String getApellido() {
        return apellido;
    }

    public void setApellido(String apellido) {
        this.apellido = apellido;
    }

    public String getTemario() {
        return temario;
    }

    public void setTemario(String temario) {
        this.temario = temario;
    }

    public String getFoto() {
        return foto;
    }

    public void setFoto(String foto) {
        this.foto = foto;
    }
}

- dev.sgvero.confbsas.sgv/OradorDAO.java

package dev.sgvero.confbsas.sgv;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

public class OradorDAO {

    public List<Orador> getOradores() {
        List<Orador> oradores = new ArrayList<>();
        try (Connection connection = DatabaseConnection.getConnection();
             PreparedStatement statement = connection.prepareStatement("SELECT * FROM oradores");
             ResultSet resultSet = statement.executeQuery()) {

            while (resultSet.next()) {
                int id = resultSet.getInt("id");
                String nombre = resultSet.getString("nombre");
                String apellido = resultSet.getString("apellido");
                String temario = resultSet.getString("temario");
                String foto = resultSet.getString("foto");

                Orador orador = new Orador(id, nombre, apellido, temario, foto);
                oradores.add(orador);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            // Manejar la excepción apropiadamente
        }
        return oradores;
    }

    public void guardarOrador(String nombre, String apellido, String temario, String foto) {
        try (Connection connection = DatabaseConnection.getConnection();
             PreparedStatement statement = connection.prepareStatement("INSERT INTO oradores (nombre, apellido, temario, foto) VALUES (?, ?, ?, ?)", Statement.RETURN_GENERATED_KEYS)) {

            statement.setString(1, nombre);
            statement.setString(2, apellido);
            statement.setString(3, temario);
            statement.setString(4, foto);

            int filasAfectadas = statement.executeUpdate();
            if (filasAfectadas > 0) {
                System.out.println("Orador guardado en la base de datos");

                // Obtener el ID generado para el nuevo orador
                ResultSet generatedKeys = statement.getGeneratedKeys();
                if (generatedKeys.next()) {
                    int id = generatedKeys.getInt(1);
                    System.out.println("ID del nuevo orador: " + id);
                }
            } else {
                System.out.println("Error al guardar el orador en la base de datos");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            // Manejar la excepción apropiadamente
        }
    }

    public Orador getOradorById(int id) {
        try (Connection connection = DatabaseConnection.getConnection();
             PreparedStatement statement = connection.prepareStatement("SELECT * FROM oradores WHERE id = ?")) {

            statement.setInt(1, id);

            try (ResultSet resultSet = statement.executeQuery()) {
                if (resultSet.next()) {
                    String nombre = resultSet.getString("nombre");
                    String apellido = resultSet.getString("apellido");
                    String temario = resultSet.getString("temario");
                    String foto = resultSet.getString("foto");

                    return new Orador(id, nombre, apellido, temario, foto);
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            // Manejar la excepción apropiadamente
        }
        return null;
    }

   public void editarOrador(Orador orador) {
        try (Connection connection = DatabaseConnection.getConnection();
             PreparedStatement statement = connection.prepareStatement("UPDATE oradores SET nombre = ?, apellido = ?, temario = ?, foto = ? WHERE id = ?")) {

            statement.setString(1, orador.getNombre());
            statement.setString(2, orador.getApellido());
            statement.setString(3, orador.getTemario());
            statement.setString(4, orador.getFoto());
            statement.setInt(5, orador.getId());

            int filasAfectadas = statement.executeUpdate();
            if (filasAfectadas > 0) {
                System.out.println("Orador actualizado en la base de datos");
            } else {
                System.out.println("Error al actualizar el orador en la base de datos");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            // Manejar la excepción apropiadamente
        }
    }

    public void borrarOrador(int id) {
        try (Connection connection = DatabaseConnection.getConnection();
             PreparedStatement statement = connection.prepareStatement("DELETE FROM oradores WHERE id = ?")) {

            statement.setInt(1, id);

            int filasAfectadas = statement.executeUpdate();
            if (filasAfectadas > 0) {
                System.out.println("Orador borrado de la base de datos");
            } else {
                System.out.println("Error al borrar el orador de la base de datos");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            // Manejar la excepción apropiadamente
        }
    }

    public void agregarOrador(Orador orador) {
    try (Connection connection = DatabaseConnection.getConnection();
         PreparedStatement statement = connection.prepareStatement("INSERT INTO oradores (nombre, apellido, temario, foto) VALUES (?, ?, ?, ?)", Statement.RETURN_GENERATED_KEYS)) {

        statement.setString(1, orador.getNombre());
        statement.setString(2, orador.getApellido());
        statement.setString(3, orador.getTemario());
        statement.setString(4, orador.getFoto());

        int filasAfectadas = statement.executeUpdate();
        if (filasAfectadas > 0) {
            System.out.println("Orador agregado a la base de datos");

            // Obtener el ID generado para el nuevo orador
            ResultSet generatedKeys = statement.getGeneratedKeys();
            if (generatedKeys.next()) {
                int id = generatedKeys.getInt(1);
                orador.setId(id); // Establecer el ID generado en el objeto Orador
                System.out.println("ID del nuevo orador: " + id);
            }
        } else {
            System.out.println("Error al agregar el orador a la base de datos");
        }
    } catch (SQLException e) {
        e.printStackTrace();
        // Manejar la excepción apropiadamente
    }
}
}


- dev.sgvero.confbsas.sgv.app/OradorServlet.java

package dev.sgvero.confbsas.sgv.app;

import java.io.IOException;
import java.util.List;

import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

import dev.sgvero.confbsas.sgv.Orador;
import dev.sgvero.confbsas.sgv.OradorDAO;

public class OradorServlet extends HttpServlet {

    private OradorDAO oradorDAO; // Agrega esta línea

    public void init() {
        oradorDAO = new OradorDAO();
    }

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String action = request.getParameter("action");

        if (action == null) {
            mostrarListaOradores(request, response);
        } else if (action.equals("borrar")) {
            borrarOrador(request, response);
        } else if (action.equals("editar")) {
            mostrarFormularioEdicion(request, response);
        } else {
            response.sendRedirect("OradorServlet");
        }
    }

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String action = request.getParameter("action");

        if (action == null) {
            mostrarListaOradores(request, response);
        } else if (action.equals("agregar")) {
            agregarOrador(request, response);
        } else if (action.equals("actualizar")) {
            actualizarOrador(request, response);
        } else {
            response.sendRedirect("OradorServlet");
        }
    }

    private void mostrarListaOradores(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        List<Orador> oradores = oradorDAO.getOradores();
        request.setAttribute("oradores", oradores);
        RequestDispatcher dispatcher = request.getRequestDispatcher("/WEB-INF/oradores.jsp");
        dispatcher.include(request, response);
    }

    private void borrarOrador(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String idStr = request.getParameter("id");
        int id = Integer.parseInt(idStr);
        oradorDAO.borrarOrador(id);
        response.sendRedirect("OradorServlet");
    }

    private void mostrarFormularioEdicion(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String idStr = request.getParameter("id");
        int id = Integer.parseInt(idStr);
        Orador orador = oradorDAO.getOradorById(id);

        if (orador != null) {
            request.setAttribute("orador", orador);
            RequestDispatcher dispatcher = request.getRequestDispatcher("/WEB-INF/editar-orador.jsp");
            dispatcher.include(request, response);
        } else {
            response.sendRedirect("OradorServlet");
        }
    }

    private void agregarOrador(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String nombre = request.getParameter("nombre");
        String apellido = request.getParameter("apellido");
        String temario = request.getParameter("temario");
        String foto = ""; // Debes proporcionar un valor para la foto si es necesario

        oradorDAO.guardarOrador(nombre, apellido, temario, foto);
        response.sendRedirect("OradorServlet");
    }

    private void actualizarOrador(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String idStr = request.getParameter("id");
        int id = Integer.parseInt(idStr);
        String nombre = request.getParameter("nombre");
        String apellido = request.getParameter("apellido");
        String temario = request.getParameter("temario");
        String foto = ""; // Debes proporcionar un valor para la foto si es necesario

        Orador orador = oradorDAO.getOradorById(id);

        if (orador != null) {
            orador.setNombre(nombre);
            orador.setApellido(apellido);
            orador.setTemario(temario);
            orador.setFoto(foto); // Actualiza la foto si es necesario

            oradorDAO.editarOrador(orador);
        }

        response.sendRedirect("OradorServlet");
    }
}